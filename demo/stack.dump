
stack.elf:     file format elf32-littleriscv
stack.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000000

Program Header:
0x70000003 off    0x0000102c vaddr 0x00000000 paddr 0x00000000 align 2**0
         filesz 0x0000001a memsz 0x00000000 flags r--
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x0000002c memsz 0x0000002c flags r-x

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000002c  00000000  00000000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .riscv.attributes 0000001a  00000000  00000000  0000102c  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    df *ABS*	00000000 ccSfqFui.o
00000008 l       .text	00000000 foo
0000002c l       .text	00000000 exit
00000024 l       .text	00000000 add_two_num
00008800 g       *ABS*	00000000 __global_pointer$
00008000 g       .text	00000000 __SDATA_BEGIN__
00000000 g       .text	00000000 _start
00008000 g       .text	00000000 __BSS_END__
00008000 g       .text	00000000 __bss_start
00008000 g       .text	00000000 __DATA_BEGIN__
00008000 g       .text	00000000 _edata
00008000 g       .text	00000000 _end


Contents of section .text:
 0000 ef008000 6f008002 130101ff 2326a100  ....o.......#&..
 0010 2324b100 13055000 9305a000 ef008000  #$....P.........
 0020 67800000 3305b500 67800000           g...3...g...    
Contents of section .riscv.attributes:
 0000 41190000 00726973 63760001 0f000000  A....riscv......
 0010 05727633 32693270 3100               .rv32i2p1.      

Disassembly of section .text:

00000000 <_start>:
   0:	008000ef          	jal	8 <foo>
   4:	0280006f          	j	2c <exit>

00000008 <foo>:
   8:	ff010113          	add	sp,sp,-16
   c:	00a12623          	sw	a0,12(sp)
  10:	00b12423          	sw	a1,8(sp)
  14:	00500513          	li	a0,5
  18:	00a00593          	li	a1,10
  1c:	008000ef          	jal	24 <add_two_num>
  20:	00008067          	ret

00000024 <add_two_num>:
  24:	00b50533          	add	a0,a0,a1
  28:	00008067          	ret
